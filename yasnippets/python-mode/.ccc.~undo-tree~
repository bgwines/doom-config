(undo-tree-save-format-version . 1)
"327ff655b43b1a9d5907dc822138f955964fc191"
[nil nil nil nil (25624 53970 13078 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 112 . 113) (nil fontified t 112 . 113) (nil fontified t 108 . 112) (nil fontified t 97 . 108) (nil fontified t 96 . 97) (nil fontified t 95 . 96) (nil fontified t 85 . 95) (nil fontified t 84 . 85) (nil fontified t 83 . 84) (nil fontified t 76 . 83) (nil fontified t 75 . 76) (nil fontified t 74 . 75) (nil fontified t 64 . 74) (nil fontified t 60 . 64) (nil fontified t 52 . 60) (nil fontified t 48 . 52) (nil fontified t 47 . 48) (nil fontified t 37 . 47) (nil fontified t 36 . 37) (nil fontified t 25 . 36) (nil fontified t 24 . 25) (nil fontified t 1 . 24) (1 . 113) (t 25624 53970 15073 721000)) nil (25624 53975 459466 0) 0 nil])
([nil nil ((#("define(\"$1\", default=$2, type=$3, dynamic=$4, category=\"$5\")" 0 7 (ws-butler-chg chg) 7 11 (face font-lock-string-face ws-butler-chg chg) 11 21 (ws-butler-chg chg) 21 22 (face font-lock-keyword-face ws-butler-chg chg) 22 23 (face font-lock-string-face ws-butler-chg chg) 23 30 (ws-butler-chg chg) 30 31 (face font-lock-keyword-face ws-butler-chg chg) 31 32 (face font-lock-string-face ws-butler-chg chg) 32 42 (ws-butler-chg chg) 42 43 (face font-lock-keyword-face ws-butler-chg chg) 43 44 (face font-lock-string-face ws-butler-chg chg) 44 55 (ws-butler-chg chg) 55 59 (face font-lock-string-face ws-butler-chg chg) 59 60 (ws-butler-chg chg rear-nonsticky t)) . 53) (undo-tree-id12 . -60) (undo-tree-id13 . -60) (undo-tree-id14 . -60) (undo-tree-id15 . -60) (undo-tree-id16 . -60) (undo-tree-id17 . -60) (undo-tree-id18 . -60) (undo-tree-id19 . 1) (undo-tree-id20 . -60) (undo-tree-id21 . 54) (undo-tree-id22 . -7) (undo-tree-id23 . -60) (undo-tree-id24 . -60) (undo-tree-id25 . -60) (undo-tree-id26 . -60) (undo-tree-id27 . -60) (undo-tree-id28 . -60) (undo-tree-id29 . -60) (undo-tree-id30 . -60)) nil (25624 53975 459460 0) 0 nil])
([nil nil ((53 . 59)) nil (25624 53975 459440 0) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg)) . 58) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (59 . 60)) nil (25624 53975 459436 0) 0 nil])
([nil nil ((#("async" 0 5 (fontified t)) . 53) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) (undo-tree-id4 . -5) (undo-tree-id5 . -5) (undo-tree-id6 . -5) (undo-tree-id7 . -5) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) 58 (t 25624 53975 461181 296000)) nil (25624 53982 442093 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 92 . 93) (nil fontified nil 92 . 93) (nil fontified nil 91 . 92) (nil fontified nil 90 . 91) (nil fontified nil 89 . 90) (nil fontified nil 87 . 89) (nil fontified nil 84 . 87) (nil fontified nil 63 . 84) (nil fontified nil 54 . 63) (nil fontified nil 53 . 54) (53 . 93)) nil (25624 53982 441898 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 622) (#("cod" 0 3 (fontified t face font-lock-comment-face)) . -41) (undo-tree-id136 . -3) (apply deactivate-cursor-after-undo 622) (#("cod" 0 3 (fontified t face font-lock-comment-face)) . -33) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) 36 (t 25624 53982 444628 943000)) nil (25624 53992 586513 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 622) (46 . 47) (apply deactivate-cursor-after-undo 622) (35 . 36) (apply activate-cursor-for-undo 622) (44 . 45) (apply deactivate-cursor-after-undo 622) (34 . 35) (apply activate-cursor-for-undo 622) (42 . 43) (apply deactivate-cursor-after-undo 622) (33 . 34)) nil (25624 53992 586501 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -91) (undo-tree-id135 . -1) 92) nil (25624 53992 586499 0) 0 nil])
([nil nil ((91 . 95)) nil (25624 53992 586495 0) 0 nil])
([nil nil ((96 . 97)) nil (25624 53992 586494 0) 0 nil])
([nil nil ((97 . 102)) nil (25624 53992 586493 0) 0 nil])
([nil nil ((#("#" 0 1 (ws-butler-chg chg fontified t)) . -101) (undo-tree-id134 . -1) 102) nil (25624 53992 586491 0) 0 nil])
([nil nil ((101 . 102)) nil (25624 53992 586480 0) 0 nil])
([nil nil ((102 . 103)) nil (25624 53992 586475 0) 0 nil])
([nil nil ((101 . 107) (t 25624 53992 588498 901000)) nil (25624 54060 891465 0) 0 nil])
([nil nil ((109 . 114)) nil (25624 54060 891460 0) 0 nil])
([nil nil ((114 . 119) (t 25624 54060 893735 0)) nil (25624 54069 723850 0) 0 nil])
([nil nil ((119 . 125)) nil (25624 54069 723848 0) 0 nil])
([nil nil ((125 . 126)) nil (25624 54069 723847 0) 0 nil])
([nil nil ((#("#" 0 1 (fontified t ws-butler-chg chg)) . -125) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 126) nil (25624 54069 723845 0) 0 nil])
([nil current ((125 . 132)) nil (25624 54069 723820 0) 0 nil])
nil
