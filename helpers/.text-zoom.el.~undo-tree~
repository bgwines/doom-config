(undo-tree-save-format-version . 1)
"5c91def650461036bf1ae78570c466db459b36ea"
[nil nil nil nil (25632 49786 16527 0) 0 nil]
([nil nil ((apply activate-cursor-for-undo 14) (293 . 294) (apply deactivate-cursor-after-undo 14) (260 . 261) (t 24971 22846 790065 504000)) nil (25632 49786 16526 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 14) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -292) (apply deactivate-cursor-after-undo 14) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -260) (undo-tree-id0 . -1) 261) nil (25632 49786 16523 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 14) (295 . 296) (apply deactivate-cursor-after-undo 14) (261 . 262) (apply activate-cursor-for-undo 14) (293 . 294) (apply deactivate-cursor-after-undo 14) (260 . 261)) nil (25632 49786 16503 0) 0 nil])
([nil nil ((228 . 230) (t 25632 49786 20582 129000)) nil (25632 49794 98346 0) 0 nil])
([nil nil ((#("7" 0 1 (fontified t face highlight-numbers-number)) . 332) (t 25632 49794 100000 705000)) nil (25632 49831 831190 0) 0 nil])
([nil nil ((332 . 333)) nil (25632 49831 831185 0) 0 nil])
([nil nil ((308 . 317) (t 25632 49831 833577 453000)) nil (25632 49852 722160 0) 0 nil])
([nil nil ((309 . 318) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 309) (undo-tree-id13 . -8) 317) nil (25632 49852 722158 0) 0 nil])
([nil nil ((318 . 319)) nil (25632 49852 722156 0) 0 nil])
([nil nil ((309 . 317)) nil (25632 49852 722155 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg delete)) . 309) (undo-tree-id11 . -1) (#("        " 0 8 (fontified t ws-butler-chg chg)) . -309) (undo-tree-id12 . -8) 317) nil (25632 49852 722154 0) 0 nil])
([nil nil ((309 . 311) (#("(" 0 1 (fontified nil ws-butler-chg chg face font-lock-constant-face)) . -309) (308 . 310)) nil (25632 49852 722151 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -308) (undo-tree-id4 . -1) (#("(" 0 1 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . -309) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . 310) (undo-tree-id9 . 1) (undo-tree-id10 . -1)) nil (25632 49852 722149 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . 310) (undo-tree-id2 . 1) (undo-tree-id3 . -1) (309 . 310) (308 . 310) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face) ws-butler-chg chg)) . -308) (308 . 309)) nil (25632 49852 722141 0) 0 nil])
([nil nil ((309 . 320)) nil (25632 49852 722136 0) 0 nil])
([nil nil ((309 . 329) (#("doom/reset-" 0 11 (fontified t ws-butler-chg chg)) . -309) (undo-tree-id1 . -11) 320) nil (25632 49852 722132 0) 0 nil])
([nil nil ((367 . 368) (t 25632 49852 724201 460000)) nil (25632 49860 473660 0) 0 nil])
([nil nil ((#("(doom/reset-font-size)
        (" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face (rainbow-delimiters-depth-4-face)) 22 23 (fontified t) 23 24 (fontified t) 24 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-4-face))) . -308) (undo-tree-id85 . -32) (undo-tree-id86 . 1) (undo-tree-id87 . -32) (undo-tree-id88 . -32) 340 (t 25632 49860 475982 435000)) nil (25632 49912 504472 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -334) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . 1) (undo-tree-id50 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -335) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . 1) (undo-tree-id84 . -1) 336) nil (25632 49912 504463 0) 0 nil])
([nil nil ((334 . 335)) nil (25632 49912 504395 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 17) (231 . 232) (apply deactivate-cursor-after-undo 17) (apply activate-cursor-for-undo 16) (265 . 266) (apply deactivate-cursor-after-undo 16) (299 . 300) (apply activate-cursor-for-undo 17) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face) ws-butler-chg delete)) . 231) (230 . 231) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -230) (230 . 231) (#(")" 0 1 (fontified nil face highlight-numbers-number ws-butler-chg chg)) . -230) (230 . 231) (apply deactivate-cursor-after-undo 17) (apply activate-cursor-for-undo 16) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face) ws-butler-chg delete)) . 265) (264 . 265) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -264) (264 . 265) (#(")" 0 1 (fontified nil face highlight-numbers-number ws-butler-chg chg)) . -264) (264 . 265) (apply deactivate-cursor-after-undo 16) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face) ws-butler-chg delete)) . 299) (undo-tree-id15 . 1) (undo-tree-id16 . -1) (298 . 299) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -298) (298 . 299) (#(")" 0 1 (fontified nil face highlight-numbers-number ws-butler-chg chg)) . -298) (298 . 299)) nil (25632 49912 504393 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 17) (205 . 206) (apply deactivate-cursor-after-undo 17) (apply activate-cursor-for-undo 16) (240 . 241) (apply deactivate-cursor-after-undo 16) (275 . 276)) nil (25632 49912 504384 0) 0 nil])
([nil nil ((373 . 375) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . 350) (349 . 350) (349 . 350) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -372) (372 . 373)) nil (25632 49912 504381 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -374) (undo-tree-id14 . -1) 375) nil (25632 49912 504378 0) 0 nil])
([nil nil ((373 . 375)) nil (25632 49965 104099 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 21) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 230) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (apply deactivate-cursor-after-undo 21) (apply activate-cursor-for-undo 22) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 266) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 23) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 302) (apply deactivate-cursor-after-undo 23) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 374) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (t 25632 49967 36076 620000)) nil (25632 50239 635812 0) 0 nil] [nil nil ((#("z" 0 1 (fontified t face font-lock-doc-face)) . 175) (t 25632 49912 506875 130000)) ((175 . 176)) (25632 49964 925844 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 21) (232 . 233) (apply deactivate-cursor-after-undo 21) (apply activate-cursor-for-undo 22) (269 . 270) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 23) (306 . 307) (apply deactivate-cursor-after-undo 23) (379 . 380) (apply activate-cursor-for-undo 21) (231 . 232) (apply deactivate-cursor-after-undo 21) (apply activate-cursor-for-undo 22) (267 . 268) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 23) (303 . 304) (apply deactivate-cursor-after-undo 23) (375 . 376) (apply activate-cursor-for-undo 21) (230 . 231) (apply deactivate-cursor-after-undo 21) (apply activate-cursor-for-undo 22) (265 . 266) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 23) (300 . 301) (apply deactivate-cursor-after-undo 23) (371 . 372)) nil (25632 50239 635698 0) 0 nil])
([nil nil ((175 . 176)) ((#("Z" 0 1 (fontified t face font-lock-doc-face)) . 175)) (25632 49964 317935 0) 0 nil])
([nil nil ((347 . 348) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . 320) (319 . 320) (319 . 320) (t 25632 50239 638634 364000)) nil (25632 50291 991460 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t face font-lock-string-face)) . -411) (undo-tree-id89 . -1) 412) ((411 . 412)) (25632 49964 121938 0) 0 nil] [nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 412)) ((nil ws-butler-chg delete 413 . 414) (412 . 413)) (25632 49953 538753 0) 0 nil])
([nil nil ((#("doom/increase-font-size" 0 1 (fontified t face font-lock-function-name-face) 1 23 (fontified t face font-lock-function-name-face)) . 321) (undo-tree-id373 . -23) (undo-tree-id374 . -23) 335) nil (25632 50324 825589 0) 0 nil] [nil nil ((320 . 329)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 320) (undo-tree-id298 . -1)) (25632 50291 643868 0) 0 nil])
([nil nil ((411 . 412)) ((#("Z" 0 1 (fontified t face font-lock-string-face)) . 411) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (t 25632 49956 278187 920000)) (25632 49956 276110 0) 0 nil])
nil
([nil nil ((321 . 330)) nil (25632 50324 825585 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . 322) (undo-tree-id203 . 1) (undo-tree-id204 . -1) (321 . 322) (320 . 322) (#("(" 0 1 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-3-face))) . -320) (320 . 321)) ((#("(" 0 1 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-3-face))) . 320) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (undo-tree-id215 . -1) (320 . 321) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . 320) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . 2) (undo-tree-id254 . -1) (undo-tree-id255 . 1) (undo-tree-id256 . -2) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -2) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 321) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . 1) (undo-tree-id297 . -1) (322 . 323)) (25632 50291 351271 0) 0 nil])
nil
([nil nil ((#("set-" 0 4 (fontified t ws-butler-chg chg)) . -326) (undo-tree-id372 . -4) 330) nil (25632 50324 825584 0) 0 nil])
([nil nil ((321 . 332)) ((#("doom/reset-" 0 11 (fontified t ws-butler-chg chg)) . 321) (undo-tree-id205 . -11) (undo-tree-id206 . -11) (undo-tree-id207 . -11) (undo-tree-id208 . -11) (undo-tree-id209 . -11) (undo-tree-id210 . -11) (undo-tree-id211 . -11) (undo-tree-id212 . -11)) (25632 50291 135747 0) 0 nil])
([nil nil ((#("doom/" 0 5 (fontified t ws-butler-chg chg)) . -321) (undo-tree-id371 . -5) 326) nil (25632 50324 825582 0) 0 nil])
([nil nil ((321 . 341) (#("doom/reset-" 0 11 (fontified t ws-butler-chg chg)) . -321) (undo-tree-id202 . -11) 332) ((321 . 332) (#("doom/reset-font-size" 0 20 (fontified t face font-lock-function-name-face)) . 321) (t 25632 50257 592252 120000)) (25632 50257 588902 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -320) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . 1) (undo-tree-id370 . -1) 321) nil (25632 50324 825580 0) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -323) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . 1) (undo-tree-id341 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -324) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . 1) (undo-tree-id366 . -1) 325) nil (25632 50324 825574 0) 0 nil])
([nil nil ((323 . 324)) nil (25632 50324 825515 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t ws-butler-chg delete face highlight-numbers-number)) . 320) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 320)) nil (25632 50324 825513 0) 0 nil])
([nil nil ((320 . 329)) nil (25632 50324 825492 0) 0 nil])
([nil nil ((320 . 340) (#("doom/font" 0 9 (fontified t ws-butler-chg chg)) . -320) (undo-tree-id299 . -9) 329) nil (25632 50324 825491 0) 0 nil])
([nil nil ((342 . 343) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . 320) (319 . 320) (319 . 320)) nil (25632 50324 825799 0) 0 nil])
([nil nil ((#("(doom/reset-font-size)))
" 0 1 (fontified nil ws-butler-chg delete face (rainbow-delimiters-depth-4-face)) 1 21 (fontified nil ws-butler-chg chg face font-lock-function-name-face) 21 22 (fontified nil ws-butler-chg delete face (rainbow-delimiters-depth-4-face)) 22 23 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 23 24 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 24 25 (fontified nil ws-butler-chg delete)) . 312) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -22) (undo-tree-id392 . -22) (undo-tree-id393 . -22) (undo-tree-id394 . -22) (undo-tree-id395 . -22) (undo-tree-id396 . -22) (undo-tree-id397 . -22) (undo-tree-id398 . -22) (undo-tree-id399 . -22) (undo-tree-id400 . -22) (undo-tree-id401 . -22) (undo-tree-id402 . -22) (undo-tree-id403 . -22) (undo-tree-id404 . -22) (undo-tree-id405 . -22) (undo-tree-id406 . -22) (undo-tree-id407 . -22) (undo-tree-id408 . -22) (undo-tree-id409 . -22) (undo-tree-id410 . -22) (undo-tree-id411 . -22) (undo-tree-id412 . -22) (undo-tree-id413 . -22) (undo-tree-id414 . -22) (undo-tree-id415 . -22) (undo-tree-id416 . -22) (undo-tree-id417 . -22) (undo-tree-id418 . -22) (undo-tree-id419 . -22) (undo-tree-id420 . -22) (undo-tree-id421 . -22) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -22) (undo-tree-id433 . -22) (undo-tree-id434 . -22) (undo-tree-id435 . -22) (undo-tree-id436 . -22) (undo-tree-id437 . -22) (undo-tree-id438 . -22) (undo-tree-id439 . -22) (undo-tree-id440 . -22) (undo-tree-id441 . -22) (undo-tree-id442 . -22) (undo-tree-id443 . -22) (undo-tree-id444 . -22) (undo-tree-id445 . -22) (undo-tree-id446 . -22) (undo-tree-id447 . -22) (undo-tree-id448 . -22) (undo-tree-id449 . -22) (undo-tree-id450 . -22) (undo-tree-id451 . -22) (undo-tree-id452 . -22) (undo-tree-id453 . -22) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -22) (undo-tree-id483 . -1) (undo-tree-id484 . -21) (undo-tree-id485 . -21) (undo-tree-id486 . 25) (undo-tree-id487 . -1) (undo-tree-id488 . 4) (undo-tree-id489 . -22) (undo-tree-id490 . -25) (#("  (\"l\" (" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 6 (fontified t face font-lock-string-face) 6 7 (fontified t) 7 8 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face))) . -312) (undo-tree-id491 . -8) 320) nil (25632 50334 985736 0) 0 nil] [nil nil ((320 . 329)) ((#("
        " 0 9 (fontified t ws-butler-chg chg)) . 320) (undo-tree-id375 . -9) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -9)) (25632 50324 825474 0) 0 nil])
([nil nil ((#("large" 0 5 (fontified t face font-lock-doc-face)) . 164)) nil (25632 50334 985647 0) 0 nil])
nil
([nil nil ((#("l_: " 0 4 (fontified t face font-lock-doc-face)) . -160) (undo-tree-id382 . -4) 164) nil (25632 50334 985646 0) 0 nil])
([nil current ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -157) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -158) (undo-tree-id380 . -1) (#("_" 0 1 (fontified t face font-lock-doc-face)) . -159) (undo-tree-id381 . -1) 160) nil (25632 50334 985641 0) 0 nil])
nil
