(undo-tree-save-format-version . 1)
"48d4c975be61d5e94fe31fc5db00d0e9247bc365"
[nil nil nil nil (25523 10157 536976 0) 0 nil]
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face)) . 380) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 380) (t 25512 51302 402470 627000)) nil (25523 10157 536971 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 244 . 245) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 219 . 243) (nil fontified nil 211 . 219) (nil fontified nil 210 . 211) (210 . 245) (t 25523 10157 539081 956000)) nil (26495 11442 555673 0) 0 nil])
([nil nil ((#("hydra" 0 5 (fontified t ws-butler-chg chg)) . 238) (undo-tree-id53 . -5)) nil (26495 11442 555671 0) 0 nil])
([nil nil ((#("navigation-" 0 11 (fontified t ws-butler-chg chg)) . -227) (undo-tree-id33 . -11) (undo-tree-id34 . -11) (undo-tree-id35 . -11) (undo-tree-id36 . -11) (undo-tree-id37 . -11) (undo-tree-id38 . -11) (undo-tree-id39 . -11) (undo-tree-id40 . -11) (undo-tree-id41 . -11) (undo-tree-id42 . -11) (undo-tree-id43 . -11) (undo-tree-id44 . -11) (undo-tree-id45 . -11) (undo-tree-id46 . -11) (undo-tree-id47 . -11) (undo-tree-id48 . -11) (undo-tree-id49 . -11) (undo-tree-id50 . -11) (undo-tree-id51 . -11) (undo-tree-id52 . -11) 238) nil (26495 11442 555668 0) 0 nil])
([nil nil ((#("symbol-" 0 7 (fontified t ws-butler-chg chg)) . -220) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -7) (undo-tree-id9 . -7) (undo-tree-id10 . -7) (undo-tree-id11 . -7) (undo-tree-id12 . -7) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -7) (undo-tree-id24 . -7) (undo-tree-id25 . -7) (undo-tree-id26 . -7) (undo-tree-id27 . -7) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -7) 227) nil (26495 11442 555648 0) 0 nil])
([nil nil ((220 . 232)) nil (26495 11442 555593 0) 0 nil])
([nil nil ((619 . 621) (t 26495 11442 558275 326000)) nil (26495 11518 740923 0) 0 nil])
([nil nil ((210 . 212) (t 26495 11518 742792 141000)) nil (26495 11695 501709 0) 0 nil])
([nil nil ((#(";;(package! ultra-scroll)
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 11 (face font-lock-comment-face fontified t) 11 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face rear-nonsticky t fontified t)) . -210) (undo-tree-id54 . -24) (undo-tree-id55 . -17) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -26) (undo-tree-id221 . -26) (undo-tree-id222 . -26) (undo-tree-id223 . -26) (undo-tree-id224 . -26) (undo-tree-id225 . -26) (undo-tree-id226 . -26) (undo-tree-id227 . -17) (undo-tree-id228 . -26) (undo-tree-id229 . -17) (undo-tree-id230 . -17) (undo-tree-id231 . -17) (undo-tree-id232 . -17) (undo-tree-id233 . -17) (undo-tree-id234 . -17) (undo-tree-id235 . -17) (undo-tree-id236 . -17) (undo-tree-id237 . -17) (undo-tree-id238 . -17) (undo-tree-id239 . -17) (undo-tree-id240 . -17) (undo-tree-id241 . -17) (undo-tree-id242 . -17) (undo-tree-id243 . -26) (undo-tree-id244 . -26) (undo-tree-id245 . -26) (undo-tree-id246 . -26) (undo-tree-id247 . -26) (undo-tree-id248 . -26) (undo-tree-id249 . -26) (undo-tree-id250 . -26) (undo-tree-id251 . -26) (undo-tree-id252 . -26) (undo-tree-id253 . -26) (undo-tree-id254 . -26) (undo-tree-id255 . -26) (undo-tree-id256 . -26) 236 (t 26495 11695 504029 612000)) nil (26495 11767 863855 0) 0 nil])
([nil nil ((210 . 211) (210 . 211) (t 26495 11767 866273 890000)) nil (26495 11862 325727 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 445 . 446) (nil fontified nil 211 . 446) (211 . 446)) nil (26495 11862 325726 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 409) 446) nil (26495 11875 531571 0) 0 nil])
([nil current ((#(";:load-path \"~/code/emacs/ultra-scroll\" ; if you git clone'd instead of package-vc-install
" 0 1 (ws-butler-chg delete face font-lock-comment-delimiter-face fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 11 (face font-lock-comment-face fontified nil) 11 12 (face font-lock-comment-face fontified nil) 12 39 (face font-lock-comment-face fontified nil) 39 40 (face font-lock-comment-face fontified nil) 40 42 (face font-lock-comment-face fontified nil) 42 91 (face font-lock-comment-face fontified nil)) . 237) (undo-tree-id270 . -91) (#("  " 0 2 (fontified t)) . -237) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) 239 (t 26495 11862 328199 446000)) nil (26495 11880 401753 0) 0 nil] [nil nil ((#(":" 0 1 (face font-lock-builtin-face ws-butler-chg delete fontified t)) . 239) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 239) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (t 26495 11862 328199 446000)) ((nil ws-butler-chg delete 240 . 241) (239 . 240) (nil ws-butler-chg delete 240 . 241) (239 . 240)) (26495 11875 531363 0) 0 nil])
nil
nil
